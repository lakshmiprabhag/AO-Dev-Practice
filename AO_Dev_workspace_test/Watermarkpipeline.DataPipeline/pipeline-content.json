{
  "properties": {
    "activities": [
      {
        "type": "Lookup",
        "typeProperties": {
          "source": {
            "type": "LakehouseTableSource"
          },
          "datasetSettings": {
            "type": "LakehouseTable",
            "typeProperties": {
              "table": "watermarktable"
            },
            "schema": [],
            "linkedService": {
              "name": "Dev_AO_Lakehouse",
              "properties": {
                "type": "Lakehouse",
                "typeProperties": {
                  "artifactId": "39faeaa5-8771-83d0-4221-90082e6163e9",
                  "workspaceId": "00000000-0000-0000-0000-000000000000",
                  "rootFolder": "Tables"
                },
                "annotations": []
              }
            },
            "annotations": []
          }
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "LookupOldWatermarkActivity",
        "dependsOn": []
      },
      {
        "type": "TridentNotebook",
        "typeProperties": {
          "notebookId": "fc5fc0b9-a1ee-b2fa-4efe-ee0f0e920cd3",
          "workspaceId": "00000000-0000-0000-0000-000000000000"
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Notebook1",
        "dependsOn": []
      },
      {
        "type": "Copy",
        "typeProperties": {
          "source": {
            "type": "SalesforceSource",
            "includeDeletedObjects": false,
            "datasetSettings": {
              "type": "SalesforceObject",
              "typeProperties": {
                "objectApiName": {
                  "value": "LastModifiedDate > @{activity('LookupOldWatermarkActivity').output.firstRow}\nAND LastModifiedDate <= @{activity('Notebook1').output.result}\n\n",
                  "type": "Expression"
                }
              },
              "schema": [],
              "externalReferences": {
                "connection": "489c6869-f664-488e-abc3-55fc1123a0b4"
              },
              "annotations": []
            }
          },
          "sink": {
            "type": "LakehouseTableSink",
            "tableActionOption": "Upsert",
            "upsertSettings": {
              "keys": [
                "Event_ID__c"
              ]
            },
            "datasetSettings": {
              "type": "LakehouseTable",
              "typeProperties": {
                "table": "custom_event_object_with_ids__c"
              },
              "schema": [],
              "linkedService": {
                "name": "Dev_AO_Lakehouse",
                "properties": {
                  "type": "Lakehouse",
                  "typeProperties": {
                    "artifactId": "39faeaa5-8771-83d0-4221-90082e6163e9",
                    "workspaceId": "00000000-0000-0000-0000-000000000000",
                    "rootFolder": "Tables"
                  },
                  "annotations": []
                }
              },
              "annotations": []
            }
          },
          "translator": {
            "type": "TabularTranslator",
            "typeConversion": true,
            "typeConversionSettings": {
              "allowDataTruncation": true,
              "treatBooleanAsNumber": false
            }
          },
          "enableStaging": false
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Copy data1",
        "dependsOn": [
          {
            "activity": "LookupOldWatermarkActivity",
            "dependencyConditions": [
              "Succeeded"
            ]
          },
          {
            "activity": "Notebook1",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      }
    ]
  }
}